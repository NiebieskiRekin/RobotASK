; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


;┌──────────────────────────┐           
;│# build all               │           
;│pio run                   │           
;│                          │           
;│# upload specific         │           
;│pio run -t upload -e myenv│           
;└──────────────────────────┘  
; alternatively: open platform.io extension tab (alien),
; click on the desired project task to expand, select upload and monitor    

[env]
platform = atmelavr
framework = arduino
lib_deps = arduino-libraries/Servo@^1.2.1
monitor_speed = 115200
monitor_filters = send_on_enter
                  log2file
                  default
monitor_echo = yes

; Use when programming an Arduino Uno with a processor inside the socket
; platformio run --target upload -e uno_monitor
; platformio device monitor --environment uno_monitor > logFile.txt
[env:uno_monitor]
board = uno

; Use when programming an ATmega328p using a Arduino Uno board 
; platformio run --target upload -e program_via_ArduinoISP
; platformio device monitor --environment program_via_ArduinoISP > logFile.txt
[env:program_via_ArduinoISP]
board = ATmega328P
upload_protocol = custom
upload_port = /dev/ttyACM0
upload_speed = 19200
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -b
    $UPLOAD_SPEED
    -c
    stk500v1
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i
